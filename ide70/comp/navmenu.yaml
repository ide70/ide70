---
unitInterface:
  descr: Navigation menu
  properties:
    structure:
      descr: Structure of menu
      mapHead: yes
      children:
        name:
          descr: Menu item title
          listHead: yes
          reference: menuHeader
          children:
            submenu:
              descr: Submenu entry
              mapHead: yes
              childrenRef: menuHeader
            loadUnit:
              descr: Name of unit to load
              valueCompleter: fileNameCompleter
              valueCompleterParams:
                folderPrefix: unit
                trimSuffix: .yaml
            fireEvent:
              descr: Fire custom event when menu item selected
            alignRight:
              descr: Align menu bar item to right
    loadTarget:
      descr: Target component to load unit when selected from menu
body: |
  {{define "actionLink"}}
  {{if .c.loadUnit}}
  {{eventHandlerWithKey .r.This "onclick" "loadUnit" .c.loadUnit}}
  {{end}}
  {{if .c.fireEvent}}
  {{eventHandlerWithKey .r.This "onclick" .c.fireEvent ""}}
  {{end}}
  {{end}}
  {{define "subMenu"}}
  {{if .c.submenu}}
  <ul>
  {{range .c.submenu}}
    <li {{if .submenu}}class="has-children"{{end}}>
      <a {{template "actionLink" passRoot . $.r}}><label class="label">{{.name}}</label>
      </a>
      {{template "subMenu" passRoot . $.r}}
    </li>
  {{end}}
  </ul>
  {{end}}
  {{end}}
  <div id="{{.sid}}" class="navmenu">
  </div>
  <nav class="navmenu">
  <ul>
  {{range .structure}}
    <li {{if .alignRight}}class="right"{{end}}><a {{template "actionLink" passRoot . $}}><label class="label">{{.name}}</label></a>
    {{template "subMenu" passRoot . $}}
    </li>
  {{end}}
  </ul>
  </nav>
eventHandlers:
  loadUnit:
    action: |
      var targetPanel = Event().CurrentComp().GetProp("loadTarget");
      CompByCr(targetPanel).LoadUnitInto(Event().EventKey());
injectRootComp:
  css:
    - name: comp/navmenu.css
