---
#        - cnrLabeledRow2:
#          - inPrefixSuggestSeat
#          - inSelectionClass
- compType: page
  tree:
    - ticketHeader:
      - textboxTicketCode
    - cnrRepeat:
      - labeledTable:
        - cnrLabeledRow:
          - inPrefixSuggestFlight
          - inSelectionDestination
          - inTimestampDepart
        - cnrLabeledRow2:
          - inPrefixSuggestSeat
    - buttonSave
  inputs:
    ticketId: Id of ticket database entity
- compType: hlp/dbhelper
  tableName: ticket
  dbIdInputName: ticketId
  cr: hlpDbhelper
  eventHandlers:
    afterSaveData:
      action: |
        Event().LoadParent();
- compType: labeledTable
  cr: ticketHeader
- compType: textbox
  label: Ticket code
  store: ticket_code
  cr: textboxTicketCode
- compType: cnr/repeat
  cr: cnrRepeat
  store: reservationConn
- compType: labeledTable
  cr: labeledTable
- compType: cnr/labeledRow
  cr: cnrLabeledRow
  label: Flight
- compType: cnr/labeledRow
  cr: cnrLabeledRow2
  label: Seat
- compType: in/prefixSuggest
  eventHandlers:
    filter: 
      action: |
        var q = CompCtx().DBCtx().QueryCtx();
        var flight = q.Table("flight");
        var searchText = Event().GetParam("searchPrefix");
        q.From(flight).Select(flight._id,flight.flight_id,flight.destination,flight.departure).
        Where(flight.destination.Like("%"+searchText+"%")).
        AscendingBy(flight.departure).List();
    lookupSelectedData:
      action: |
        var dataKey = Event().GetParam("dataKey");
        var q = CompCtx().DBCtx().QueryCtx();
        var flight = q.Table("flight");
        q.From(flight).Select(flight.flight_id, flight.destination, flight.departure).
        Where(flight._id.Equals(dataKey)).OneRow();
  searchResultDisplayColumns:
    - flight_id
    - destination
    - departure
  descrColumn: flight_id
  keyColumn: id
  additionalFields: 
    - cr: inSelectionDestination
      columnName: destination
    - cr: inTimestampDepart
      columnName: departure
  store: flight
  cr: inPrefixSuggestFlight
- compType: in/selection
  dictionaryFile: airport
  label: Destination
  cr: inSelectionDestination
  readonly: yes
  allowEmpty: yes
- compType: in/timestamp
  label: Depart
  cr: inTimestampDepart
  readonly: yes
- compType: in/prefixSuggest
  eventHandlers:
    filter: 
      action: |
        var q = CompCtx().DBCtx().QueryCtx();
        var flightId = CompByCr("inPrefixSuggestFlight").GetProp("value");
        var airplane = q.Table("airplane");
        var flight = airplane.JoinedTable("flightMConn");
        var seat = airplane.JoinedTable("seatMConn");
        var searchText = Event().GetParam("searchPrefix");
        q.From(airplane).Select(seat._id, seat.code, seat.class, seat.window).
        Where(flight._id.Equals(flightId).And(seat.code.Like('%'+searchText+'%').OrEmpty(searchText))).
        AscendingBy(seat.code).List();
    lookupSelectedData:
      action: |
        var q = CompCtx().DBCtx().QueryCtx();
        var dataKey = Event().GetParam("dataKey");
        var seat = q.Table("seat");
        q.From(seat).Select(seat.code, seat.class).Where(seat._id.Equals(dataKey)).OneRow();
  searchResultDisplayColumns:
    - code
    - class
    - window
  descrColumn: code
  keyColumn: id
  minPrefixLength: 0
  store: seat
  cr: inPrefixSuggestSeat
  additionalFields:
    - cr: inSelectionClass
      columnName: class
- compType: textbox
  store: note
  cr: textboxNote
- compType: cnr/repeat
  label: Special Notes
  store: specNotes
  cr: cnrRepeatSpecialNotes
- compType: in/selection
  dictionaryFile: seatClass
  label: Class
  cr: inSelectionClass
  readonly: yes
  allowEmpty: yes
- compType: button
  text: Save
  eventHandlers:
    onclick:
      action: |
        CompByCr("hlpDbhelper").ForwardEvent("saveData");
  cr: buttonSave
