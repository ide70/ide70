---
body: |
  <div class="fileselect" id={{.sid}}>
  <ul>
  {{range $i, $entry := .Files}}
  <li>
    {{if $entry.isDir}}
    {{generateComp $.This "subdir" $i $entry}}
    {{else}}
    {{generateComp $.This "fileEntry" $i $entry}}
    {{end}}
  </li>
  {{end}}
  </ul>
  </div>
eventHandlers:
  onUnitCreate:
    action: |
        Event().Comp.State["Files"] = Event().FileCtx().ReadDir(Event().Comp.State["basePath"]);
        CompByCr("").CreateMapProp("open");
  refresh:
    action: |
        common_log("----self rfefresh start");
        /* CompByCr("").GeneratedChildren().forEach(function(child) {
            isChildOpen = CompByCr("").GetProp("open")[child.GetProp("parentContext")["path"]];
            common_log("ico:"+isChildOpen);
            if(child.GetProp("compType") == "part/subdir" && isChildOpen) {
                child.ForwardEvent("refresh_subtree");
            }
        }); */
        CompByCr("").Refresh();
        common_log("----self rfefresh done");
autoInclude:
  - compType: part/subdir
    cr: subdir
  - compType: part/fileentry
    cr: fileEntry
injectToComp:
  - cr: fileEntry
    copy:
      - dblClickFunc
      - attachedCompCr
      - fileClickCompCr
  - cr: subdir
    copy:
      - dirClickCompCr
injectRootComp:
  css:
    - name: comp/fileTree.css
