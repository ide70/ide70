---
include:
  - common
body: |
  <div id="{{.sid}}" class="grp">
  {{if .parentContext.isOpen}}
  <i class="fas fa-folder-open fa-fw"{{template "eventHandlers" .}}></i>
  <span class="fs-dir open"{{eventHandler $.This "onclick" "onclick_dirname"}}>{{.parentContext.name}}</span>
  <ul>
  {{range $i, $entry := .parentContext.Files}}
  <li>
    {{if $entry.isDir}}
    {{generateComp $.This "subdir" $i $entry}}
    {{else}}
    {{generateComp $.This "fileEntry" $i $entry}}
    {{end}}
  </li>
  {{end}}
  </ul>
  {{else}}
  <i class="fas fa-folder fa-fw"{{eventHandler $.This "onclick"}}></i>
  <span class="fs-dir"{{eventHandler $.This "onclick" "onclick_dirname"}}>{{.parentContext.name}}</span>
  {{end}}
  </div>
eventHandlers:
  onclick:
    action: |
        isOpen = Event().Comp.State.parentContext.isOpen;
        Event().Comp.State.parentContext.isOpen = !isOpen;
        if(!isOpen) {
          files = Event().FileCtx().ReadDir(Event().Comp.State.parentContext.path);
          Event().Comp.State.parentContext.Files = files;
        }
        Event().CurrentComp().Refresh();
  refresh:
    action: |
        common_log("refresh called.");
        var files = Event().FileCtx().ReadDir(Event().Comp.State.parentContext.path);
        Event().Comp.State.parentContext.Files = files;
        Event().CurrentComp().Refresh();
  refresh_parent:
    action: |
        common_log("refresh parent called.");
        Event().CurrentComp().GetParentComp().ForwardEvent("refresh");
  onclick_dirname:
    action: |
        dirNameCr = Event().CompProps().dirClickCompCr;
        if(dirNameCr) {
            dirNameComp = CompByCr(dirNameCr);
            if(dirNameComp) {
                dirNameComp.ForwardEvent("display").
                    AddForwardParam("path", Event().Comp.State.parentContext.path).
                    AddForwardParam("dirComp", Event().Comp);
            }
        }
