---
include:
  - common
body: |
  <div id="{{.sid}}" class="grp">
  {{if index .rootCompSt.open .parentContext.path}}
  <i class="fas fa-folder-open fa-fw"{{template "eventHandlers" .}}></i>
  <i class="fas fa-bars"{{eventHandler $.This "onclick" "onclick_dirname"}}></i>
  <span class="fs-dir open">{{.parentContext.name}}</span>
  <ul>
  {{range $i, $entry := .parentContext.Files}}
  <li>
    {{if $entry.isDir}}
    {{generateComp $.This "subdir" $i $entry}}
    {{else}}
    {{generateComp $.This "fileEntry" $i $entry}}
    {{end}}
  </li>
  {{end}}
  </ul>
  {{else}}
  <i class="fas fa-folder fa-fw"{{eventHandler $.This "onclick"}}></i>
  <span class="fs-dir">{{.parentContext.name}}</span>
  {{end}}
  </div>
eventHandlers:
  onclick:
    action: |
        isOpen = Event().Comp.State.rootCompSt.open[Event().Comp.State.parentContext.path];
        Event().Comp.State.rootCompSt.open[Event().Comp.State.parentContext.path] = !isOpen;
        if(!isOpen) {
          files = Event().FileCtx().ReadDir(Event().Comp.State.parentContext.path);
          Event().Comp.State.parentContext.Files = files;
        }
        Event().CurrentComp().Refresh();
  refresh:
    action: |
        common_log("refresh called.");
        var files = Event().FileCtx().ReadDir(Event().Comp.State.parentContext.path);
        Event().Comp.State.parentContext.Files = files;
        Event().CurrentComp().Refresh();
  beforeCompRefresh:
    action: |
        isOpen = Event().Comp.State.rootCompSt.open[Event().Comp.State.parentContext.path];
        common_log("befcr:"+Event().Comp.State.parentContext.path+" "+isOpen);
        if(isOpen) {
          files = Event().FileCtx().ReadDir(Event().Comp.State.parentContext.path);
          Event().Comp.State.parentContext.Files = files;
        }
  refresh_subtree:
    action: |
        var files = Event().FileCtx().ReadDir(Event().Comp.State.parentContext.path);
        Event().Comp.State.parentContext.Files = files;
        common_log("files re-read:" + Event().Comp.State.parentContext.path);
        CompByCr("").GeneratedChildren().forEach(function(child) {
            isChildOpen = Event().Comp.State.rootCompSt.open[child.GetProp("parentContext")["path"]];
            if(child.GetProp("compType") == "part/subdir" && isChildOpen) {
                child.ForwardEvent("refresh_subtree");
            }
        });
        common_log("----subtree rfefresh done");
  refresh_parent:
    action: |
        common_log("refresh parent called.");
        Event().CurrentComp().GetParentComp().ForwardEvent("refresh");
  onclick_dirname:
    action: |
        dirNameCr = Event().CompProps().dirClickCompCr;
        if(dirNameCr) {
            dirNameComp = CompByCr(dirNameCr);
            if(dirNameComp) {
                dirNameComp.ForwardEvent("display").
                    AddForwardParam("path", Event().Comp.State.parentContext.path).
                    AddForwardParam("dirComp", Event().Comp);
            }
        }
